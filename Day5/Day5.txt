for 문
for문은 while문과 달리 자체적으로 초기값, 조건식, 증감식을 모두 포함하고 있는 반복문입니다. while문 보다는 간결하게 반복을 표현할 수 있습니다.

for(초기값; 조건식; 증감식){
    조건식의 결과가 참인 동안 반복할 실행문;
    ...
}

for(let i=1; i<=5; i++){
    console.log('Hello, JavaScript!');
}


while문과의 비교

let i=1;

while(i<=5){
    console.log('Hello, JavaScript!');
    i++;
}


continue 문
반복중인 문장 내에서 사용하며 해당 문장의 나머지 부분을 건너뛰고 다음 조건식의 판단으로 넘어가게 합니다.

while문 또는 for문
{
    반복중인 문장
    ...
        continue; // continue를 만나면 다시 반복문의 조건으로 돌아감(현재 반복 횟수는 완료)

    반복중인 문장
}


break 문
반복중인 문장 내에서 사용하여 해당 반복문을 완전히 종료시키고 반복문 다음에 위치한 실행문으로 이동합니다.


중첩 반복문
반복문이 2개이상 겹쳐있는 문장을 의미합니다.

while(조건식){
    ...
    while(조건식){
        ...
    }
}

for(초기값; 조건식; 증감식){
    ...
    for(초기값; 조건식; 증감식){
        ...
    }
}

for(let i=1; i<=5; i++){
    console.log(`현재 i의 값 : ${i}`);
    for(let j=1; j<=3; j++){
        console.log(`현재 j의 값 : ${j}`);
    }
}



배열(Array)
이름과 인덱스로 참조되는 정렬된 값의 집합입니다. 배열을 구성하는 각각의 값을 배열 요소라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스라고 합니다.

배열을 만드는 방법

let 배열명;
배열명 = [요소1, 요소2, 요소3 ...];

let arr;
arr = [100, 90, 200, 50];

let 배열명 = new Array(요소1, 요소2, 요소3 ..);


자바스크립트 배열의 특징
1. 배열 요소의 타입이 고정되어 있지 않음

let arr = [1, 1.5, true, "김사과"];

2. 배열 요소의 인덱스가 연속적이지 않아도 됨

let arr = [];
arr[0] = 1;
arr[3] = 5;
arr[5] = 10;

3. Array 객체로 다뤄짐


Array 객체의 메소드
push() : 배열의 요소를 추가
pop() : 배열의 마지막 주소에 있는 값을 제거
shift() : 배열의 첫번째 주소에 있는 값을 제거
concat() : 두 개의 배열을 합침
join() : 배열 요소 사이에 원하는 문자를 삽입
reverse() : 배열을 역순으로 재배치
sort() : 배열을 오름차순으로 정렬


for in 문(key를 저장)

for(변수선언 in 객체){
    객체의 요소의 개수만큼 반복할 문장;
}

let arr1 = ['김사과', 20, 160.5, true];
for(let i in arr1){
    console.log(i); // 0 1 2 3
    console.let(arr1[i]);
}

for of 문(value 저장)

for(변수선언 of 객체){
    객체의 요소의 개수만큼 반복할 문장;
}

let arr1 = ['김사과', 20, 160.5, true];
for(let i of arr1){
    console.log(i); // '김사과', 20, 160.5, true
}


foreach 문
오직 Array객체에서만 사용할 수 있는 메서드

배열.forEach(콜백함수(item, index, arr){
    배열의 요소의 개수만큼 반복할 문장;
});

let arr1 = ['김사과', 20, 160.5, true];
arr1.forEach(function(item, index, arr2){
    console.log(item, index, arr2[index+1]);
});









